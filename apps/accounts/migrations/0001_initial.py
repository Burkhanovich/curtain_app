# Generated by Django 5.2.4 on 2025-09-02 11:07

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefon raqami')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Manzil')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name="Tug'ilgan sana")),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='Profil rasmi')),
                ('email_notifications', models.BooleanField(default=True, verbose_name='Email xabarnomalar')),
                ('sms_notifications', models.BooleanField(default=False, verbose_name='SMS xabarnomalar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaratilgan vaqt')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Yangilangan vaqt')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Foydalanuvchi',
                'verbose_name_plural': 'Foydalanuvchilar',
                'db_table': 'accounts_user',
                'ordering': ['-date_joined'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('home', 'Uy manzili'), ('work', 'Ish manzili'), ('other', 'Boshqa')], default='home', max_length=10, verbose_name='Manzil turi')),
                ('title', models.CharField(max_length=100, verbose_name='Manzil nomi')),
                ('address_line_1', models.CharField(max_length=255, verbose_name='Manzil 1-qator')),
                ('address_line_2', models.CharField(blank=True, max_length=255, verbose_name='Manzil 2-qator')),
                ('city', models.CharField(max_length=100, verbose_name='Shahar')),
                ('region', models.CharField(max_length=100, verbose_name='Viloyat')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='Pochta indeksi')),
                ('country', models.CharField(default='Uzbekistan', max_length=100, verbose_name='Mamlakat')),
                ('is_default', models.BooleanField(default=False, verbose_name='Asosiy manzil')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaratilgan vaqt')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Foydalanuvchi manzili',
                'verbose_name_plural': 'Foydalanuvchi manzillari',
                'db_table': 'accounts_user_address',
                'ordering': ['-is_default', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Erkak'), ('F', 'Ayol'), ('O', 'Boshqa')], max_length=1, verbose_name='Jinsi')),
                ('bio', models.TextField(blank=True, max_length=500, verbose_name='Haqida')),
                ('website', models.URLField(blank=True, verbose_name='Veb-sayt')),
                ('facebook', models.URLField(blank=True, verbose_name='Facebook')),
                ('instagram', models.URLField(blank=True, verbose_name='Instagram')),
                ('telegram', models.CharField(blank=True, max_length=100, verbose_name='Telegram')),
                ('is_business', models.BooleanField(default=False, verbose_name='Biznes foydalanuvchi')),
                ('company_name', models.CharField(blank=True, max_length=200, verbose_name='Kompaniya nomi')),
                ('tax_id', models.CharField(blank=True, max_length=50, verbose_name='Soliq ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Foydalanuvchi profili',
                'verbose_name_plural': 'Foydalanuvchi profillari',
                'db_table': 'accounts_user_profile',
            },
        ),
    ]
